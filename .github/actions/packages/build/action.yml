name: "Build test env"
description: "Build test environment to run tests"

inputs:
  node-version:
    description: "Node version to use, default to LTS Fermium (14.x)"
    required: true
    default: lts-fermium
  secret_email:
    description: "First User's Email Address"
    required: true
  secret_password:
    description: "First User's Password"
    required: true
  secret_second_email:
    description: "Second User's Email Address"
    required: true
  secret_second_password:
    description: "Second User's Password"
    required: true
  create_email:
    description: "Create your email address"
    required: true
  create_password:
    description: "Create your password"
    required: true
  base_url:
    description: "Base URL of the app"
    required: true

runs:
  using: "composite"
  steps:
    # Set up a Node environment given a node version
    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v3.4.1
      with:
        node-version: ${{ inputs.node-version }}

    - name: Cache
      uses: actions/cache@v3.0.5
      id: npm-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-
          
    - if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci
      shell: bash

    - name: Get installed Playwright version
      id: playwright-version
      run: echo "::set-output name=version::$(cat package-lock.json | grep "^\"@playwright\/test" --after-context 1 | tail -n 1 | sed 's/\s*version "\([0-9.]\+\)"/\1/')"
      shell: bash

    - uses: actions/cache@v3
      id: playwright-cache
      with:
        path: '~/.cache/ms-playwright'
        key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install Playwright with dependencies
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps
      shell: bash

    - name: Install Playwright's dependencies
      if: steps.playwright-cache.outputs.cache-hit == 'true'
      run: npx playwright install-deps
      shell: bash

    - name: Create .env file
      run: |
        touch .env
        echo SECRET_EMAIL="${{ inputs.secret_email }}" >> .env
        echo SECRET_PASSWORD="${{ inputs.secret_password }}" >> .env
        echo SECRET_SECOND_EMAIL="${{ inputs.secret_second_email }}" >> .env
        echo SECRET_SECOND_PASSWORD="${{ inputs.secret_second_password }}" >> .env
        echo CREATE_EMAIL="${{ inputs.create_email }}" >> .env
        echo CREATE_PASSWORD="${{ inputs.create_password }}" >> .env
        echo BASE_URL="${{ inputs.base_url }}" >> .env
        cat .env
      shell: bash