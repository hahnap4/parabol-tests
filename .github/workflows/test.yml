name: main

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
   - cron: '0 5 1-31 * *'

jobs: 
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and test

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v3.0.5
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v3.4.1
        with:
          node-version: '14.x'

      - uses: bahmutov/npm-install@v1

      - name: Create .env file
        run:  echo "${{ secrets.ENV_FILE }}" > .env

      - run: npm ci

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "::set-output name=version::$(cat package-lock.json | grep "^\"@playwright\/test" --after-context 1 | tail -n 1 | sed 's/\s*version "\([0-9.]\+\)"/\1/')"

      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: '~/.cache/ms-playwright'
          key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright with dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Install Playwright's dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps
   
      - name: Run tests
        run: npx playwright test

      - uses: actions/upload-artifact@v3.1.0
        if: failure()
        with:
          name: test-failures
          path: |
            playwright-report/
            test-results/
          retention-days: 30
